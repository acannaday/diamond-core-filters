#
#       SnapFind (Release 0.9)
#       An interactive image search application
#
#      Copyright (c) 2002-2005, Intel Corporation
#      All Rights Reserved
#
#  This software is distributed under the terms of the Eclipse Public
#  License, Version 1.0 which can be found in the file named LICENSE.
#  ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS SOFTWARE CONSTITUTES
#  RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT
#

ROOTDIR = @top_srcdir@
VPATH = @srcdir@
SRCDIR = @srcdir@
OBJROOT = @OBJROOT@
CVCPPFLAGS = @CVCPPFLAGS@
CVLDFLAGS = @CVLDFLAGS@

GTK_LDFLAGS = @GTK_LDFLAGS@
GTK_CPPFLAGS = @GTK_CPPFLAGS@

# use the GTK values when building this code
CPPFLAGS += ${GTK_CPPFLAGS}

# 
# Set the libraries and the library paths we will need
# to build these files.
LIBS += -ldl -lfl -lpthread -lm 
LIBS += -Wl,-whole-archive -lsearchlet -lfilterexec -lfilter -llog 
LIBS += -Wl,-no-whole-archive -lfl -lodisk -ltools
LIBS += -lhstub -ldctl -ldconfig
LIBS += -llog -lssl -ltiff -lz -lsfgtk -lsfimage -ltiff -lresults

# objects used to build the searchlet(s)
SEARCHLET_SRCS = 

SEARCHLET_OBJS = 

SEARCHLET_LIBS += -lm -lsfimage -ltiff -ljpeg -lz

SEARCHLET_LIBDIR += 

# objects needed to build the main
SNAPFIND_SRCS = $(COMMON_APP_SRCS) $(COMMON_SHARED_SRCS)
SNAPFIND_SRCS += snapfind.cc sfind_search.cc
SNAPFIND_SRCS +=  read_config.cc  stats_win.c
SNAPFIND_SRCS += progress_win.cc    
SNAPFIND_SRCS += snap_popup.cc graph_win.cc cache_control.cc
SNAPFIND_SRCS += sfind_tools.c   factory.cc  example_search.cc
SNAPFIND_SRCS += gtk_image_tools.c import_sample.cc display_img.cc
SNAPFIND_SRCS += window_search.cc img_search.cc search_support.cc 
SNAPFIND_SRCS += search_set.cc plugin.cc

SNAPFIND_OBJS = $(COMMON_APP_OBJS) $(COMMON_SHARED_OBJS)
SNAPFIND_OBJS += snapfind.o sfind_search.o read_config.o 
SNAPFIND_OBJS += progress_win.o snap_popup.o  stats_win.o
SNAPFIND_OBJS += graph_win.o cache_control.o
SNAPFIND_OBJS += sfind_tools.o  factory.o example_search.o
SNAPFIND_OBJS += gtk_image_tools.o import_sample.o display_img.o
SNAPFIND_OBJS += window_search.o img_search.o search_support.o
SNAPFIND_OBJS += search_set.o snapfind_config.o plugin.o plugin_conf.o

DEBUG_SRCS = face.c
DEBUG_OBJS = face.o

#
# All the source files that are needed for depend.
#
SRCS = $(SNAPFIND_SRCS) $(SEARCHLET_SRCS) $(DEBUG_SRCS)
OBJS = $(SNAPFIND_OBJS) $(SEARCHLET_OBJS) $(DEBUG_OBJS)


#
# Compilation Targets
#


#
# Other objects to cleanup
CLEAN_OTHERS += read_config.cc 

TARGETS =  snapfind snap_searchlet.so

SHARED_BIN += snapfind 

SHARED_LIB += snap_searchlet.so  snap_searchlet.sf_conf

SHARED_HEADERS = img_search.h search_set.h factory.h

include ${OBJROOT}/Makefile.template


ifeq ($(OSTYPE),linux)
DYNAMIC = -rdynamic
endif

ifeq ($(OSTYPE),darwin)
DYNAMIC = -dynamic
endif

cln:
	$(RM) core.*
	$(RM) /tmp/fspec* /tmp/filsp* /tmp/objfil*
	$(RM) /var/tmp/fspec* /var/tmp/filsp* /var/tmp/objfil*

clean-targets:	clean-experiments
	$(RM) $(TARGETS)

default: $(TARGETS)

snap_searchlet.so: $(SEARCHLET_OBJS)
	$(CPLUSPLUS) $(CFLAGS_SO) $(LDFLAGS) -o $@ -shared -static $(SEARCHLET_OBJS) $(SEARCHLET_LIBS) $(SEARCHLET_LIBDIR)

libssearch.a: $(SEARCHLET_OBJS)
	$(AR) r $@ $(SEARCHLET_OBJS)


snapfind: $(SNAPFIND_OBJS)
	$(CPLUSPLUS) $(CFLAGS) $(DYNAMIC) -o $@ $(SNAPFIND_OBJS) $(LIBS) $(LDFLAGS) $(GTK_LDFLAGS) 


wavelet-test:	wavelet.o rgb.o
	$(CC) $(CFLAGS) -o wavelet-test wavelet.o rgb.o -static -lwvlt -lm
